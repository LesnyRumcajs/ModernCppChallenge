language: cpp

notifications:
  email: false

os: linux
dist: xenial

cache:
  directories:
  - ${TRAVIS_BUILD_DIR}/deps

common_sources: &all_sources
- ubuntu-toolchain-r-test

clang_sources: &llvm_sources
- llvm-toolchain-xenial-7
- sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7.0 main'
- key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

matrix:
  include:
  - env: COMPILER=g++-8 BUILD_TYPE=Debug COVERAGE=1 VALGRIND=1
    compiler: gcc
    addons:
      apt:
        packages: [g++-8, valgrind, lcov, curl, libboost-all-dev]
        sources: [*all_sources]
  - env: COMPILER=g++-8 BUILD_TYPE=Release
    compiler: gcc
    addons:
      apt:
        packages: [g++-8, libboost-all-dev]
        sources: [*all_sources]
  - env: COMPILER=clang++-7 BUILD_TYPE=Debug VALGRIND=1
    compiler: clang
    addons:
      apt:
        packages: [clang++-7, g++-8, valgrind, lcov, curl, libboost-all-dev]
        sources: [*all_sources, *llvm_sources]
  - env: COMPILER=clang++-7 BUILD_TYPE=Release
    compiler: clang
    addons:
      apt:
        packages: [clang++-7, g++-8, libboost-all-dev]
        sources: [*all_sources, *llvm_sources]

before_install:
- sudo pip install codecov

install:
- export CXX=${COMPILER}
- ${CXX} --version

# Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p "${DEPS_DIR}"
- cd "${DEPS_DIR}"

# Travis machines have 2 cores
- JOBS=2

# Install a recent CMake
- CMAKE_VERSION=3.12.4
- |
  CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
  mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  export PATH=${DEPS_DIR}/cmake/bin:${PATH}
- cmake --version

before_script:
- cd "${TRAVIS_BUILD_DIR}"
- mkdir build && cd build
- cmake -DCOVERAGE=${COVERAGE} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ..

script:
- cmake --build . -- -j${JOBS}
- |
  if [[ "${VALGRIND}" == "1" ]]; then
    ctest --verbose -T memcheck
  else
    ctest --verbose
  fi

after_success:
# Create report and upload it to codecov
- |
  if [[ "${COVERAGE}" == "1" ]]; then
    cd ${TRAVIS_BUILD_DIR}
    lcov --directory . --capture --output-file coverage.info # capture coverage info
    lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
    lcov --list coverage.info #debug info
    bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
  fi
